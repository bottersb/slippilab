export declare const replays: import("drizzle-orm/sqlite-core").SQLiteTableWithColumns<{
    name: "replays";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "id";
            tableName: "replays";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, object>;
        type: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "type";
            tableName: "replays";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, object>;
        slug: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "slug";
            tableName: "replays";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, object>;
        matchId: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "match_id";
            tableName: "replays";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, object>;
        gameNumber: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "game_number";
            tableName: "replays";
            dataType: "number";
            columnType: "SQLiteInteger";
            data: number;
            driverParam: number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, object>;
        tiebreakerNumber: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "tiebreaker_number";
            tableName: "replays";
            dataType: "number";
            columnType: "SQLiteInteger";
            data: number;
            driverParam: number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, object>;
        startTimestamp: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "start_timestamp";
            tableName: "replays";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, object>;
        stageId: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "stage_id";
            tableName: "replays";
            dataType: "number";
            columnType: "SQLiteInteger";
            data: number;
            driverParam: number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, object>;
    };
    dialect: "sqlite";
}>;
export declare const replayRelations: import("drizzle-orm").Relations<"replays", {
    replayPlayers: import("drizzle-orm").Many<"replay_players">;
}>;
export declare const replayPlayers: import("drizzle-orm/sqlite-core").SQLiteTableWithColumns<{
    name: "replay_players";
    schema: undefined;
    columns: {
        replayId: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "replay_id";
            tableName: "replay_players";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, object>;
        playerIndex: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "player_index";
            tableName: "replay_players";
            dataType: "number";
            columnType: "SQLiteInteger";
            data: number;
            driverParam: number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, object>;
        connectCode: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "connect_code";
            tableName: "replay_players";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, object>;
        displayName: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "display_name";
            tableName: "replay_players";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, object>;
        nametag: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "nametag";
            tableName: "replay_players";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, object>;
        teamId: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "team_id";
            tableName: "replay_players";
            dataType: "number";
            columnType: "SQLiteInteger";
            data: number;
            driverParam: number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, object>;
        externalCharacterId: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "external_character_id";
            tableName: "replay_players";
            dataType: "number";
            columnType: "SQLiteInteger";
            data: number;
            driverParam: number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, object>;
        costumeIndex: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "costume_index";
            tableName: "replay_players";
            dataType: "number";
            columnType: "SQLiteInteger";
            data: number;
            driverParam: number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, object>;
    };
    dialect: "sqlite";
}>;
export declare const replayPlayerRelations: import("drizzle-orm").Relations<"replay_players", {
    replay: import("drizzle-orm").One<"replays", false>;
}>;
//# sourceMappingURL=schema.d.ts.map